<!-- Creates the directory structure and non-content files for an epub, 
    using as input the meta.xml file found in the OpenOffice Write document 
    (add .zip to file name and extract). ooxml-to-html.xsl must run first,
    once for each OpenOffice Write document. 
    Takes 2 parameters:
    $output-folder - name of the folder which will contain the epub files
    $no-of-chs - the number of xhtml files generated by ooxml-to-html.xsl. 
    To finish epub, copy chapters into the main folder of the file structure
    (see global variables, below), create a new zip folder and copy mimetype file 
    and directory structure into it, then change the extension to .epub. -->    
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0"
    xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xhtml="http://www.w3.org/1999/xhtml" version="2.0">
    
    <!-- Parameters -->
    <xsl:param name="output-folder"/>
    <xsl:param name="no-of-chs"/>
    
    <!-- Global variables -->
    <xsl:variable name="META_FOLDER" select="'META-INF'"/>
    <xsl:variable name="MAIN_FOLDER" select="'OEBPS'"/>
    <xsl:variable name="CONTAINER_FILE" select="'container.xml'"/>
    <xsl:variable name="CONTENT_FILE" select="'content.opf'"/>
    <xsl:variable name="TOC_FILE" select="'toc.ncx'"/>
    <xsl:variable name="CHAPTER_EXT" select="'xhtml'"/>
    <xsl:variable name="CSS_FILE" select="'styles.css'"/>
    <xsl:variable name="book-title" select="//dc:title[1]"/>
    <xsl:variable name="book-author" select="//dc:creator[1]"/>
    <xsl:variable name="UNIQUE_ID" select="'5B4D2014-6C25-11E0-9AEF-E8C54724019B'"/>
    <xsl:variable name="RIGHTS" select="'Original copyright 1986; electronic edition copyright 2011, University of New Brunswick.'"/>
    
    <xsl:output method="xml" indent="yes" encoding="UTF-8"/>
    
    <xsl:template match="office:document-meta/office:meta">
        <xsl:call-template name="make-mimetype"/>
        <xsl:call-template name="make-container"/>
        <xsl:call-template name="make-content"/>
        <xsl:call-template name="make-style"/>
        <xsl:call-template name="make-toc"/>
    </xsl:template>
    
    <!-- Output mimetype file -->
    <xsl:template name="make-mimetype">
        <xsl:result-document method="text" href="{concat($output-folder, '/', 'mimetype')}">
            <xsl:text>application/epub+zip</xsl:text>
        </xsl:result-document>
    </xsl:template>
        
    <!-- Output container.xml file -->
    <xsl:template name="make-container">
        <xsl:result-document href="{concat($output-folder, '/', $META_FOLDER, '/', $CONTAINER_FILE)}">
            <container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container">
                <rootfiles>
                    <rootfile full-path="{concat($MAIN_FOLDER, '/', $CONTENT_FILE)}" media-type="application/oebps-package+xml"/>
                </rootfiles>
            </container>
        </xsl:result-document>
    </xsl:template>
    
    <!-- Output content.opf file -->
    <xsl:template name="make-content">
        <xsl:result-document href="{concat($output-folder, '/', $MAIN_FOLDER, '/', $CONTENT_FILE)}">
            <package version="2.0" xmlns="http://www.idpf.org/2007/opf" unique-identifier="EPB-UUID">
                <metadata xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:opf="http://www.idpf.org/2007/opf">
                    <dc:title><xsl:value-of select="$book-title"/></dc:title>
                    <dc:creator><xsl:value-of select="$book-author"/></dc:creator>
                    <dc:language><xsl:text>en-CA</xsl:text></dc:language>
                    <dc:rights><xsl:value-of select="$RIGHTS"/></dc:rights>
                    <dc:publisher><xsl:value-of select="meta:user-defined[@meta:name='Company']"></xsl:value-of></dc:publisher>
                    <dc:identifier id="EPB-UUID"><xsl:text>urn:uuid:</xsl:text><xsl:value-of select="$UNIQUE_ID"/></dc:identifier>
                </metadata>
                <manifest>
                    <xsl:comment>NCX file</xsl:comment>
                    <item id="ncx" href="{$TOC_FILE}" media-type="application/x-dtbncx+xml" />
                    <xsl:comment>CSS file</xsl:comment>
                    <item id="style" href="{$CSS_FILE}" media-type="text/css"/>
                    <xsl:comment>Content files</xsl:comment>
                    <xsl:call-template name="list-content">
                        <xsl:with-param name="count" select="1"/>
                    </xsl:call-template>
                </manifest>
                <spine toc="ncx">
                    <xsl:call-template name="list-spine">
                        <xsl:with-param name="count" select="1"/>
                    </xsl:call-template>
                </spine>
            </package>
        </xsl:result-document>
    </xsl:template>
    
    <!-- List chapters in manifest -->
    <xsl:template name="list-content">
        <xsl:param name="count"/>
        <xsl:if test="$count != $no-of-chs + 1">
            <xsl:variable name="id" select="concat('chapter', string($count))"/>
            <item xmlns="http://www.idpf.org/2007/opf" id="{$id}" href="{concat($id, '.', $CHAPTER_EXT)}" media-type="application/xhtml+xml"/>
            <xsl:call-template name="list-content">
                <xsl:with-param name="count" select="$count + 1"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>
    
    <!-- List chapters in spine -->
    <xsl:template name="list-spine">
        <xsl:param name="count"/>
        <xsl:if test="$count != $no-of-chs + 1">
            <xsl:variable name="id" select="concat('chapter', string($count))"/>
            <itemref xmlns="http://www.idpf.org/2007/opf" idref="{$id}"/>
            <xsl:call-template name="list-spine">
                <xsl:with-param name="count" select="$count + 1"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>
    
    <!-- Output style file -->
    <xsl:template name="make-style">
        <xsl:result-document method="text" href="{concat($output-folder, '/', $MAIN_FOLDER, '/', $CSS_FILE)}">
            <xsl:text>body { font-family: Georgia, Palatino, "Palatino Linotype", Times, "Times New Roman", serif; }</xsl:text>
            <xsl:text>a { text-decoration: none; }</xsl:text>
            <xsl:text>.note-ref { font-family: Times, "Times New Roman", serif; vertical-align: top; font-size: .5em; }</xsl:text>
            <xsl:text>h1 { text-align: center; text-transform: uppercase; margin: 1em 0 2em; font-size: 1em; font-weight: normal; }</xsl:text>
        </xsl:result-document>
    </xsl:template>
    
    <!-- Output toc.ncx file -->
    <xsl:template name="make-toc">
        <xsl:result-document href="{concat($output-folder, '/', $MAIN_FOLDER, '/', $TOC_FILE)}">
            <ncx xmlns="http://www.daisy.org/z3986/2005/ncx/" version="2005-1">
                <head>
                    <meta name="dtb:uid" content="{$UNIQUE_ID}"/>
                    <meta name="dtb:depth" content="1"/>
                </head>
                <docTitle>
                    <text><xsl:value-of select="$book-title"/></text>
                </docTitle>
                <docAuthor>
                    <text><xsl:value-of select="$book-author"/></text>
                </docAuthor>
                <navMap>
                    <xsl:call-template name="list-toc">
                        <xsl:with-param name="count" select="1"/>
                    </xsl:call-template>
                </navMap>
            </ncx>
        </xsl:result-document>
    </xsl:template>
    
    <!-- list Table of Contents -->
    <xsl:template name="list-toc">
        <xsl:param name="count"/>
        <xsl:if test="$count != $no-of-chs + 1">
            <xsl:variable name="id" select="concat('chapter', string($count))"/>
            <xsl:variable name="src" select="concat($id, '.', $CHAPTER_EXT)"/>
            <navPoint xmlns="http://www.daisy.org/z3986/2005/ncx/" id="{$id}" playOrder="{$count}">
                <navLabel>
                    <text>
                        <xsl:value-of select="document(concat($output-folder, '/', $src))/xhtml:html/xhtml:head/xhtml:title"/>
                    </text>
                </navLabel>
                <content src="{$src}"/>
            </navPoint>
            <xsl:call-template name="list-toc">
                <xsl:with-param name="count" select="$count + 1"/>
            </xsl:call-template>
        </xsl:if>
    </xsl:template>
    
</xsl:stylesheet>